= simple_form_for([:broker, @seeker], html: { novalidate: false }) do |f|

  - if notification = f.error_notification
    .alert.alert-danger
      = notification

  .form-actions
    - if @seeker.new_record?
      = f.button :submit, "Jugendlichen erstellen", class: 'btn btn-primary btn-success'
    - else
      = f.button :submit, t('common.edit'), class: 'btn btn-primary btn-success'

  %fieldset
    .form-inputs
      = f.input :status, as: :radio_buttons, collection: [{value: 'inactive', label: t('activerecord.attributes.seeker.inactive_html')}, {value: 'active', label: t('activerecord.attributes.seeker.active_html')}, {value: 'completed', label: t('activerecord.attributes.seeker.ended_html')}], label_method: ->(obj){obj[:label]}, value_method: ->(obj){obj[:value]}, label: false, inline_label: '', item_wrapper_class: 'control control--radio'

  %fieldset
    %legend
      = "JugendlicheR"
    .form-inputs
      = f.input :firstname, required: true
      = f.input :lastname, required: true

  - if !@seeker.new_record?
    %fieldset
      %a{href: "#", "data-toggle": "modal", "data-target": "#message_modal"}
        %i.fa.fa-envelope
        = "Nachricht senden"

    %fieldset
      .form-inputs
        = f.input :parental, label: false, inline_label: true

      %a{href: "/broker/seekers/#{@seeker.id}/agreement?format=pdf", target: '_blank'}
        %i.fa.fa-print.margin_left_20.green
        = "Drucken"
      %a.margin_left_20{href: "#", "data-toggle": "modal", "data-target": "#pdf_message_modal"}
        %i.fa.fa-envelope
        = "Elterneinverständnis als Pdf schicken"
      .form-inputs
        = f.input :discussion, label: false, inline_label: true

  - unless @seeker.new_record?
    %fieldset
      .form-inputs
        = f.input :new_note, label: false, as: :text
        %button.btn.btn-success{id: 'comment-btn'}
          = "Kommentieren"
        - Note.where(seeker_id: @seeker.id).order(:created_at).reverse_order.each do |note|
          %hr
          %div.js-note{'data-note-id': "#{note.id}"}
            %div.row
              %div.col-md-8
                %p
                  %span.bold.margin-right-10
                    = note.broker.name
                  %span.js-note-date
                    = note.updated_at.strftime("%d.%m.%Y, %H:%M")
              %div.col-md-4.text-right
                - if note.broker.id == current_broker.id
                  %span.edit-btn.js-btn-edit
                    = "Bearbeiten"
                  %span.remove-btn{'data-note-id': "#{note.id}"}
                    = "Löschen"
              %div.col-md-12.js-comment
                = note.message
            %hr
            %div.js-edit-field.edit-field
              = text_area_tag :note_edit, note.message ,class: 'text optional form-control'
              = button_tag "Abbrechen", class: "btn btn-success edit-comment-btns js-btn-note-cancel", type: 'button'
              = button_tag "Aktualisieren", class: "btn btn-success edit-comment-btns js-btn-note-update", type: 'button', data: {'update-url': broker_note_seeker_update_comment_path(@seeker, note)}

        - unless @seeker.notes.blank?
          %hr
          %div.row
            %div.col-md-8
              %p
                %span.bold.margin-right-10
                  = "Ältere Notizen"
          %p
            = @seeker.notes

  %fieldset
    .form-inputs
      = f.input :mobile, required: true
      - if @seeker.new_record?
        = f.input :password, required: true, autocomplete: 'off'
        = f.input :password_confirmation, required: true
      - else
        = f.input :password, required: false, autocomplete: 'off'
        = f.input :password_confirmation, required: false
      = f.input :email
      = f.input :additional_contacts, required: false
      = f.input :date_of_birth, required: true, start_year: Date.today.year - 25, end_year: Date.today.year - 13, include_blank: true, hint: 'Du solltest zwischen 13 und 25 Jahre alt sein.'
      = f.input :sex, collection: seeker_sex, include_blank: false

  %fieldset
    .form-inputs
      = f.input :street, required: true
      = f.association :place, required: true, collection: current_broker.places.order(:name, :zip), include_blank: true, label_method: :full_name

  %fieldset
    .form-inputs
      = f.association :work_categories, as: :check_boxes, label_method: :label

  %fieldset
    .form-inputs
      = f.association :certificates, as: :check_boxes, label: 'Zertifikate'

  .form-inputs
    = f.label "Weitere Fähigkeiten"
    = f.text_area :other_skills, class: 'text optional form-control'


  %fieldset
    .form-inputs
      = f.input :languages, required: false
      = f.input :occupation, required: false
      = f.input :occupation_end_date, required: false, include_blank: true

  %fieldset
    %legend
      = "Zuständige Organisation"
    .form-inputs
      = f.association :organization, required: true, include_blank: true, label: false, collection: current_broker.all_organizations

  .form-actions
    - if @seeker.new_record?
      = f.button :submit, "Jugendlichen erstellen", class: 'btn btn-primary btn-success'
    - else
      = f.button :submit, t('common.edit'), class: 'btn btn-primary btn-success'

  - if !@seeker.new_record?
    .form-actions
      %a.btn.btn-success{href: "#", "data-toggle": "modal", "data-target": "#delete_seeker_modal"}
        = "Löschen"

    = render 'delete_modal'

- if !@seeker.new_record?
  = render 'pdf_message_modal'
  = render 'message_modal'

  :javascript
    $(document).ready(function() {
      var modalId;

      function checkForModal() {
        var id = sessionStorage.getItem('showSeekerModal');
        if(id != null && id != '') {
          sessionStorage.setItem('showSeekerModal', '');
          $(id).modal();
        }
      }

      checkForModal();

      $('#message_modal .btn-send').click(function(){
        modalId = '#message_modal';
        $('#message_modal button').attr('disabled', 'disabled');
        sendMessage(function(){
          sessionStorage.setItem('showSeekerModal', '#message_modal');
          window.location.reload();
        });
      });

      $('#pdf_message_modal .btn-send').click(function(){
        modalId = '#pdf_message_modal';
        $('#pdf_message_modal button').attr('disabled', 'disabled');
        sendMessage(function(){
          sessionStorage.setItem('showSeekerModal', '#pdf_message_modal');
          window.location.reload();
        });
      });

      function sendMessage(func) {
        var message = $(modalId + " .textarea").html();
        message = message.replace(/<br>/g, '');
        var title = $(modalId + " h2").text();
        if(title == "Nachricht senden"){
          title = "Jugendapp Nachricht"
        }
        var $checkbox = $(modalId + " input[type='checkbox']");
        if($checkbox.is(":checked")) {
        $.post("#{send_message_broker_seeker_path(@seeker)}", {message: message, title: title}, function(response){
          // console.log(response);
          func();
        });
        } else {
          func();
        }
        // func();
      }

      $('#comment-btn').click(function(){
        var comment = $('#seeker_new_note').val();
        if(comment === '') {
          return false;
        }

        $.post("#{add_comment_broker_seeker_path(@seeker)}", {comment: comment}, function(response) {
          window.location.reload();
        });

        return false;
      });

      $('.remove-btn').click(function(){
        var noteId = $(this).attr('data-note-id');

        $.post("#{remove_comment_broker_seeker_path(@seeker)}", {note_id: noteId}, function(response) {
          window.location.reload();
        })
      });

      // $('.js-btn-edit').click(function(){
      //   parent = $(this).closest('.js-note')
      //   parent.find('.js-edit-field').show();
      //   var noteId = parent.attr('data-note-id');
      // })
      //
      // $('.js-btn-note-cancel').click(function(){
      //   parent = $(this).closest('.js-note')
      //   parent.find('.js-edit-field').hide();
      // })
      //
      // $('.js-btn-note-update').click(function(){
      //   parent = $(this).closest('.js-note')
      //   var url = $(this).data('update-url')
      //   var message = $(this).closest('.js-edit-field').find('textarea').val()
      //   $.ajax({
      //     url: url,
      //     type: 'PATCH',
      //     data: {message: message },
      //     success: function(result) {
      //       parent.find('.js-edit-field').hide();
      //       parent.find('.js-comment').html(result.message)
      //       parent.find('.js-note-date').html(result.updated_at)
      //     },
      //     error: function(result){
      //       parent.append(
      //         `
      //           <div class="js-note-error" style="color: red; margin-top: 10px;">
      //             ${result.responseJSON.error}
      //           </div>
      //         `
      //       );
      //       setTimeout(function(){
      //         $('.js-note-error').remove();
      //       }, 3000);
      //     }
      //   });
      // })

      function disableMessaging() {
        $('.modal-body input').removeAttr('checked');
        $('.modal-body input').attr('disabled', 'true');
        $('.modal-body textarea').attr('disabled', 'true');
        $('.modal-body .btn-send').attr('disabled', 'true');
      }

      if("#{@seeker.app_user_id == nil}" == "true") {
        disableMessaging();
      }
    });