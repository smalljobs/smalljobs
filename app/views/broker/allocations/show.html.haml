%a.back_button{href: '#'}
  = '< ' + t('common.back')

- if @allocation == nil
  %h2= "Vorschlag wurde gelöscht."
  :javascript
    $(document).ready(function() {
      var showModal = sessionStorage.getItem('showModal');
      if(showModal == 'true') {
        sessionStorage.setItem('showModal', false);
      }
    });
- else
  %div.row
    %div.col-xs-12.col-sm-12.col-md-10.col-lg-8
      - if @allocation.application_open?
        %h2= "Bewerbung"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        .row.sj-div-with-btn-responsive
          .col-xs-12.col-md-3
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#open_to_active_modal"}
              = "Anstellen"
          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#open_to_rejected_modal"}
              = "Bewerbung ablehnen"
          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#open_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"


        %br
        %input{type: "checkbox", checked: "true", id: "reject_checkbox"}
          = "Andere offene Bewerbungen ablehnen"

      - if @allocation.application_rejected?
        %h2= "Bewerbung abgelehnt"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        .row.sj-div-with-btn-responsive
          .col-xs-12.col-md-3
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#rejected_to_active_modal"}
              = "Anstellen"
          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#rejected_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"


        %br
        %input{type: "checkbox", checked: "true", id: "reject_checkbox"}
          = "Andere offene Bewerbungen ablehnen"

      - if @allocation.proposal?
        %h2= "Vorgeschlagen"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        .row.sj-div-with-btn-responsive
          .col-xs-12.col-md-3
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#proposal_to_active_modal"}
              = "Anstellen"

          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#proposal_to_deleted_modal"}
              = "Vorschlag löschen"

          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#proposal_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"
        %br
        %input{type: "checkbox", checked: "true", id: "reject_checkbox"}
          = "Andere offene Bewerbungen ablehnen"

      - if @allocation.active?
        %h2= "Anstellung"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        .row.sj-div-with-btn-responsive
          .col-xs-12.col-md-3
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#active_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"
          .col-xs-12.col-md-3
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#active_send_contract_modal"}
              %i.fa.fa-send
              = "Vertrag senden"

            %br
            = link_to  broker_allocation_contract_path(@allocation.contract_id, format: :pdf), target: '_blank' do
              %i.fa.fa-print
              = "Vertrag drucken"
          .col-xs-12.col-md-2
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#active_to_finished_modal"}
              %i.fa.fa-archive
              = "Beenden"

          .col-xs-12.col-md-2
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#active_to_canceled_modal"}
              %i.fa.fa-times
              = "Abbrechen"


      - if @allocation.finished?
        %h2= "Anstellung beendet"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        .row.sj-div-with-btn-responsive
          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#finished_to_active_modal"}
              = "Anstellung reaktivieren"

          .col-xs-12.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#finished_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"


      - if @allocation.cancelled?
        %h2= "Anstellung abgebrochen"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        %div.row
          %div.col-md-4
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#finished_to_active_modal"}
              = "Anstellung reaktivieren"

          %div.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#finished_to_nothing_modal"}
              %i.fa.fa-send
              = "Nachricht senden"

      - if @allocation.application_retracted?
        %h2= "Bewerbung zurückgenommen"
        = render partial: "basic_allocation_date", locals: {job: @job, allocation: @allocation}
        %div.row
          %div.col-md-4
            %a.btn.btn-success.allocation_btn{href: "#", "data-toggle": "modal", "data-target": "#retracted_to_active_modal"}
              = "Anstellen"

          %div.col-md-4
            %a.btn.btn-success.allocation_btn.nothing_btn{href: "#", "data-toggle": "modal", "data-target": "#retracted_to_nothing_modal"}
              = "Nachricht senden"

    %div.col-sm-4
      = render 'todos'

  = render 'active_to_finished'
  = render 'finished_to_active'
  = render 'open_to_active'
  = render 'proposal_to_active'
  = render 'rejected_to_active'
  = render 'open_to_rejected'
  = render 'proposal_to_deleted'
  = render 'active_to_canceled'
  = render 'open_to_nothing'
  = render 'rejected_to_nothing'
  = render 'proposal_to_nothing'
  = render 'active_to_nothing'
  = render 'finished_to_nothing'
  = render 'nothing'
  = render 'retracted_to_active'
  = render 'retracted_to_nothing'
  = render 'active_send_contract'
  = render partial: '/rocketchats/rc_seeker', locals: {seeker: @allocation.seeker}
  .hidden
    .js-reload-after-close-rc

  :javascript
    window.redirect_href = null;
    $(document).ready(function() {
      if (sessionStorage.getItem('showChat') == 'true') {
        setTimeout(() => {
          $('.js-rocket-chat-start').click()
        }, 1000)
        sessionStorage.removeItem('showChat')
      }
      var modalId;

      function checkForModal() {
        var showModal = sessionStorage.getItem('showModal');
        if(showModal == 'true') {
          sessionStorage.setItem('showModal', false);
          modalId = '#nothing_modal';
          $('#nothing_modal .modal-header h2').text(sessionStorage.getItem('buttonText'));
          $('#nothing_modal .modal-header .js-link-to-pdf').html(sessionStorage.getItem('linkToPdf'));
          $('#nothing_modal').modal();
        }
      }

      checkForModal();

      $('.allocation_btn').click(function(){
        modalId = $(this).attr('data-target');
        sessionStorage.setItem('buttonText', $(modalId + ' .modal-body .btn').text());
      });

      $('.js-change-state').click(function(){
        // $('button').attr('disabled', 'disabled');

        var $checkbox = $('#reject_checkbox');
        var reject_other = false;
        if($checkbox.is(":checked")) {
          reject_other = true;
        }

        $.get("#{change_state_broker_job_allocation_path(@job, @allocation)}?reject_other=" + reject_other, function(response){
          sendMessage(function(){
            if("#{ENV['ROCKET_CHAT_URL'].blank?}" == "true"){
              sessionStorage.setItem('showModal', true);
              if (window.location.href === response['redirect_to']) {
                location.reload()
              } else {
                window.location.href = response['redirect_to'];
              }
            }else{
              if (window.location.href === response['redirect_to']) {
                location.reload()
              } else {
                window.location.href = response['redirect_to'];
              }
            }
          });

        });
      });

      $('.cancel_state').click(function(){
      // $('button').attr('disabled', 'disabled');
        sendMessage(function(){
            $.get("#{cancel_state_broker_job_allocation_path(@job, @allocation)}", function(response){
            if("#{ENV['ROCKET_CHAT_URL'].blank?}" == "true"){
              sessionStorage.setItem('showModal', true);
              window.location.href = response['redirect_to'];
            }else{
              window.redirect_href = response['redirect_to'];
            }
            });
          });
      });

      $('.prevail_state').click(function(){
        // $('button').attr('disabled', 'disabled');
        sendMessage(function(){
        if("#{ENV['ROCKET_CHAT_URL'].blank?}" == "true"){
          sessionStorage.setItem('showModal', true);
          window.location.reload();
        }
        });

      });

      function sendMessage(func) {
        var message = $(modalId + " .textarea").html();
        message = message.replace(/<br>/g, '');
        var title = $(modalId + " h2").text();
        var $checkbox = $(modalId + " input[type='checkbox']");
        if($checkbox.is(":checked")) {
          $.post("#{send_message_broker_job_allocation_path(@job, @allocation)}", {message: message, title: title}, function(response){
            // console.log(response);
            func();
          });
        } else {
          func();
        }
      }


      $('.js-send-contract').click(function(){
        _btn = $(this)
        $(this).button('loading')
        sendContract(function(){
        toastr.success('Gespeichert!');
        // $('#active_send_contract_modal').modal('hide')
        _btn.button('reset')

         sessionStorage.setItem('showModal', true);
           window.location.reload();
        });
      });

      function sendContract(func) {
        var message = $(modalId + " .textarea").html();
        message = message.replace(/<br>/g, '');
        var title = $(modalId + " h2").text();
        var $checkbox = $(modalId + " input[type='checkbox']");
        if($checkbox.is(":checked")) {
          $.post("#{send_contract_broker_job_allocation_path(@job, @allocation)}", {message: message, title: title}, function(response){
            // console.log(response);
            sessionStorage.setItem('linkToPdf', $(modalId + ' .js-link-to-pdf').html());
            func();
          });
        } else {
          func();
        }
      }



      function disableMessaging() {
        $('.modal-body input').removeAttr('checked');
        $('.modal-body input').attr('disabled', 'true');
        $('.modal-body textarea').attr('disabled', 'true');
        // $('.modal-body button').attr('disabled', 'true');
      }

      if("#{@allocation.seeker.app_user_id == nil}" == "true") {
        disableMessaging();
      }
    });

