-# - if (current_broker.present? || current_provider.present?)
-#   .vacation-bar.js-organization{data: {id: current_broker.selected_organization_id, name: "Alle Organisationen"}, style: "display: none"}
-#     Die
-#     %span.js-organisation-name
-#       Alle Organisationen
-#     Organisation hat Feiertage von
-#     %span.js-org-start-date
-#       test
-#     bis
-#     %span.js-org-end-date
-#       test2
%div{id: 'dashboard'}
  %div.row
    %div.col-sm-3
      %div.dropdown
        %select{id: 'dropdown-btn'}
          %option{value: "0"}
            = "Alle Organisationen"
          - for organization in current_broker.all_organizations
            %option{value: "#{organization.id}", data: {'vacation-start': organization.start_vacation_date,
            'vacation-end': organization.end_vacation_date,
            'show-date': ( organization.vacation_active && (organization.end_vacation_date.present? && (organization.end_vacation_date > Date.today))).to_s},
            selected: organization.id == current_broker.selected_organization_id}

              = organization.name
    %div.col-sm-2.float-left.display-none
      %input.form-control.search{type: 'text', id: 'search-field', placeholder: 'Suche'}
    %div.col-sm-1.float-left.display-none
      %a.pointer{id: 'clear-btn', style: 'display: none'}
        %i.fa.fa-close.fa-3x

  %br

  %div.modal.fade{id: "jobFormModal"}
    %div.modal-dialog
      %div.modal-content
        %div.modal-header
          %button.close{"data-dismiss": "modal", type: "button"} &times;
          %h2
            = "Job Formular"
        %div.modal-body
          %p
            = "Dieses Job Formular soll ausschliesslich da zur Anwendung kommen, wo nicht mit der digitalen Version gearbeitet werden kann. Das Formular kann ausgedruckt und in den jeweiligen Institutionen aufgelegt werden. Hier geht's zum Download:"
          = link_to "Job Formular", asset_path("Job_Formular.pdf"), class: 'btn btn-success'
        %div.modal-footer

  %ul.nav.nav-pills.js-active-tab
    %li.active
      %a{'data-toggle': 'tab', href: '#todos'}
        =t('broker_dashboard.todo')
        %span
          = "(#{@todos&.current&.length.to_i})"
    %li
      %a{'data-toggle': 'tab', href: '#jobs'}
        =t('broker_dashboard.jobs')
        %span
          = "(#{@jobs&.length.to_i})"
    %li
      %a{'data-toggle': 'tab', href: '#providers'}
        =t('broker_dashboard.providers')
        %span
          = "(#{@providers&.length.to_i})"
    %li
      %a{'data-toggle': 'tab', href: '#seekers'}
        =t('broker_dashboard.seekers')
        %span
          = "(#{@seekers&.length.to_i})"

    %li
      %a{'data-toggle': 'tab', href: '#assignments'}
        =t('broker_dashboard.assignments')
        %span
          = "(#{@assignments&.length.to_i})"
  %div.tab-content
    %div{id: 'todos', class: 'tab-pane fade in active'}
      %ul.nav.nav-pills.margin_top_20.js-todo-tabs{style: {display: 'none'}}
        %li.active
          %a{'data-toggle': 'tab', href: '#todo_current'}
            =t('broker_dashboard.aktuelle')
        %li.margin_left_20
          %a{'data-toggle': 'tab', href: '#todo_postponed'}
            =t('broker_dashboard.verschoben')
        %span.js-postpone-msg.margin_left_20{style: 'display: none'}
          =t('broker_dashboard.todo_table.postpone_message')


        %div.row
          %div.col-sm-3.float-right
            %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
            %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
      %div{id: 'todo_current', class: 'tab-pane active js-todo-current'}
        .table-responsive
          %table.table.table-striped.sortable
            %thead
              %tr
                %th
                %th.sortable{id: 'todo_date'}= t('broker_dashboard.todo_table.date')
                %th.sortable{id: 'todo_todo'}= t('broker_dashboard.todo_table.todo')
                %th= t('broker_dashboard.todo_table.description')
                %th.pull-right= t('broker_dashboard.todo_table.postpone')
            %tbody.list
              - if @todos&.current&.count == 0

                %tr
                  %td{colspan: 5}= "Es sind noch keine Todo in deiner Region erfasst"
              - @todos&.current&.each do |todo|
                %tr{ class: "organization organization-#{todo.organization_id}" }
                  - sortable_date = todo.created_at.strftime("%Y%m%d%H%M%S")
                  %td.completed
                    - if todo.manual_completion
                      %a.js-todo-completed{href: "#", data: {url: "#{url_for completed_broker_todo_path(todo.id)}", url_undo: "#{url_for uncompleted_broker_todo_path(todo.id)}"}}
                        %i.fa.fa-2x.fa-check-circle
                  %td.date{sorttable_customkey: sortable_date}
                    = todo.created_at.strftime("%d.%m.%Y")
                  %td.title
                    = todo.todotype.title
                  %td.description
                    - if todo.record_type == 'job'
                      = link_to 'Job: ' + todo.job.title, edit_broker_job_path(todo.job)
                    - elsif todo.record_type == 'provider'
                      = link_to 'Anbieterln: ' + todo.provider.name, edit_broker_provider_path(todo.provider)
                    - elsif todo.record_type == 'seeker'
                      = link_to 'JugendlicheR: ' + todo.seeker.name, edit_broker_seeker_path(todo.seeker)
                    - elsif todo.record_type == 'allocation'
                      %a{href: "#{url_for broker_job_allocation_path(todo.job, todo.seeker)}"}
                        = 'JugendlicheR: ' + todo.seeker.name
                        %br
                        = 'Anbieterln: ' + todo.provider.name
                        %br
                        = 'Job: ' + todo.job.title
                  %td
                    %span.sj-postpone.js-postpone{data: {url: broker_todo_path(todo.id), todo_type: 'current'}}
                      %i.fa.fa-2x.fa-clock-o.pull-right.safari-fix
      %div{id: 'todo_postponed', class: 'tab-pane js-todo-postponed'}
        .table-responsive
          %table.table.table-striped.sortable
            %thead
              %tr
                %th.sortable{id: 'todo_date'}= t('broker_dashboard.todo_table.date')
                %th.sortable{id: 'todo_todo'}= t('broker_dashboard.todo_table.todo')
                %th.sorttable_nosort= t('broker_dashboard.todo_table.description')
                %th.sorttable_nosort
                %th.sorttable_nosort.pull-right= t('broker_dashboard.todo_table.postpone')
                %th.sortable= t('broker_dashboard.todo_table.date')
            %tbody.list
              - if @todos&.postponed&.count == 0

                %tr
                  %td{colspan: 5}= "Es sind noch keine Todo in deiner Region erfasst"
              - @todos&.postponed&.each do |todo|
                %tr{ class: "organization organization-#{todo.organization_id}" }
                  - sortable_date = todo.created_at.strftime("%Y%m%d%H%M%S")
                  %td.completed
                    - if todo.manual_completion
                      %a.js-todo-completed{href: "#", data: {url: "#{url_for completed_broker_todo_path(todo.id)}", url_undo: "#{url_for uncompleted_broker_todo_path(todo.id)}"}}
                        %i.fa.fa-2x.fa-check-circle
                  %td.date{sorttable_customkey: sortable_date}
                    = todo.created_at.strftime("%d.%m.%Y")
                  %td.title
                    = todo.todotype.title
                  %td.description
                    - if todo.record_type == 'job'
                      = link_to 'Job: ' + todo.job.title, edit_broker_job_path(todo.job)
                    - elsif todo.record_type == 'provider'
                      = link_to 'Anbieterln: ' + todo.provider.name, edit_broker_provider_path(todo.provider)
                    - elsif todo.record_type == 'seeker'
                      = link_to 'JugendlicheR: ' + todo.seeker.name, edit_broker_seeker_path(todo.seeker)
                    - elsif todo.record_type == 'allocation'
                      %a{href: "#{url_for broker_job_allocation_path(todo.job, todo.seeker)}"}
                        = 'JugendlicheR: ' + todo.seeker.name
                        %br
                        = 'Anbieterln: ' + todo.provider.name
                        %br
                        = 'Job: ' + todo.job.title
                  %td
                    %span.sj-postpone.js-postpone{data: {url: broker_todo_path(todo.id), 'todo-type' => 'postponed'}}
                      %i.fa.fa-2x.fa-clock-o.pull-right.safari-fix
                  %td
                    = todo.postponed.strftime("%d.%m.%Y")

    %div{id: 'jobs', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('broker.jobs.index.add_new'), new_broker_job_path, class: 'btn btn-success'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
          %a.btn.contract-btn{href: "#", "data-toggle": "modal", "data-target": "#jobFormModal"}
            = "Job Formular"
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'job_status'}= t('broker_dashboard.jobs_table.status')
              %th.sortable{id: 'job_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'job_job'}= t('broker_dashboard.jobs_table.job')
              %th.sortable{id: 'job_provider'}= t('broker_dashboard.jobs_table.provider')
              %th= t('broker_dashboard.jobs_table.allocations')
          %tbody.list
            - if @jobs.size == 0
              %tr
                %td{ colspan: 6 }= t('broker.jobs.index.no_jobs')

            - @jobs.each do |job|
              - @job = job
              %tr{ class: "organization organization-#{job.organization_id} status-#{job.stat_name}" }
                %td.status
                  = job_label(job)
                - sortable_date = job.last_change_of_state == nil ?  "": job.last_change_of_state.strftime("%Y%m%d%H%M%S")
                %td.date{sorttable_customkey: sortable_date}
                  = job.last_change_of_state == nil ?  "": job.last_change_of_state.strftime("%d.%m.%Y")
                %td.title
                  = link_to job.title, edit_broker_job_path(job)
                %td.name
                  = link_to job.provider.name, edit_broker_provider_path(job.provider)
                %td.allocations
                  = render 'allocations'
                %td.salary.display-none
                  = job.salary
                %td.manpower.display-none
                  = job.manpower
                %td.duration.display-none
                  = job.duration
                %td.long_description.display-none
                  = job.long_description
                %td.short_description.display-none
                  = job.short_description
    %div{id: 'providers', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('providers.index.add_new'), new_broker_provider_path, class: 'btn btn-success'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'provider_status'}= t('broker_dashboard.providers_table.status')
              %th.sortable{id: 'provider_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'provider_provider'}= t('broker_dashboard.providers_table.name')
              %th.sortable{id: 'provider_address'}= t('broker_dashboard.providers_table.address')
              %th.sortable{id: 'provider_plz'}= t('broker_dashboard.providers_table.plz')
              %th.sortable{id: 'provider_jobs'}= t('broker_dashboard.providers_table.jobs')
          %tbody.list
            - if @providers.size == 0
              %tr
                %td{ colspan: 5 }= t('providers.index.no_providers')

            - @providers.each do |provider|
              %tr{ class: "organization organization-#{provider.organization_id} status-#{provider.stat_name}" }
                %td.status
                  = provider_label(provider)
                %td.date{sorttable_customkey: provider.updated_at.strftime("%Y%m%d%H%M%S")}
                  = provider.updated_at.strftime("%d.%m.%Y")
                %td.name= link_to provider.name, edit_broker_provider_path(provider)
                %td.street= provider.street
                %td.place= provider.place.zip + ' ' + provider.place.name
                %td.jobs
                  -provider.jobs.each do |job|
                    %ul.list-unstyled
                      %li= link_to job.title, edit_broker_job_path(job)
                %td.phone.display-none
                  = provider.phone
                %td.mobile.display-none
                  = provider.mobile
                %td.contact_preference.display-none
                  = provider.contact_preference
                %td.contact_availability.display-none
                  = provider.contact_availability
                %td.company.display-none
                  = provider.company
    %div{id: 'seekers', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('seekers.index.add_new'), new_broker_seeker_path, class: 'btn btn-success'
        -# %div.col-sm-2.float-left
        -#   = link_to t('seekers.index.message_to_all'), broadcast_room_broker_rocketchats_path, class: 'btn btn-success js-message-to-all-rc'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field js-search-field-seeker', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none.js-seeker-delete-icon
          .sj-age-slider-container-relative
            .sj-age-slider-container.js-age-slider-container.display-none
              #js-lower-value.sj-lower-value.col-xs-2
              .sj-slider.col-xs-6.col-xs-offset-1
                #js-age-scroll
              #js-higher-value.sj-higher-value.col-xs-2.col-xs-offset-1
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'seeker_status'}= t('broker_dashboard.seekers_table.status')
              %th.sortable{id: 'seeker_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'seeker_chat'}= t('broker_dashboard.seekers_table.chat')
              %th.sortable{id: 'seeker_seeker'}= t('broker_dashboard.seekers_table.name')
              %th.sortable{id: 'seeker_address'}= t('broker_dashboard.seekers_table.address')
              %th.sortable{id: 'seeker_plz'}= t('broker_dashboard.seekers_table.plz')
          %tbody.list
            - if @seekers.size == 0
              %tr
                %td{ colspan: 4 }= t('seekers.index.no_seekers')
            - @seekers.each do |seeker|
              %tr{ class: "organization organization-#{seeker.organization_id} status-#{seeker.stat_name}" }
                %td.status
                  = seeker_label(seeker)
                %td{sorttable_customkey: seeker.updated_at.strftime("%Y%m%d%H%M%S")}
                  = seeker.updated_at.strftime("%d.%m.%Y")
                %td.chat{sorttable_customkey: @unread_messages[seeker.id].to_i }
                  .favicon-box.js-list-seeker-rocket-chat-inbox
                    .hidden
                      .js-rc-seeker-username{data: {username: seeker.rc_username.to_s, id: seeker.rc_id, error: I18n.t("broker.seeker.edit.error")}}
                      - if seeker.rc_username.present?
                        = link_to '#', room_broker_rocketchats_path(seeker.rc_username), class: 'js-rocket-chat-room', data: {username: seeker.rc_username.to_s, id: seeker.rc_id}
                    = inbox_icon(@unread_messages[seeker.id]) 
                %td.name= link_to seeker.name, edit_broker_seeker_path(seeker)
                %td.street= seeker.street
                %td.place= seeker.place.zip + ' ' + seeker.place.name
                %td.phone.display-none
                  = seeker.phone
                %td.mobile.display-none
                  = seeker.mobile
                %td.contact_preference.display-none
                  = seeker.contact_preference
                %td.contact_availability.display-none
                  = seeker.contact_availability
                %td.email.display-none
                  = seeker.email
                %td.sex.display-none
                  = seeker.sex
                %td.occupation.display-none
                  = seeker.occupation
                %td.additional_contacts.display-none
                  = seeker.additional_contacts
                %td.languages.display-none
                  = seeker.languages
                %td.age.display-none
                  = seeker.age
                %td.rc_username.display-none= seeker.rc_username
    %div{id: 'assignments', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'assignment_status'}= t('broker_dashboard.assignments_table.status')
              %th.sortable{id: 'assignment_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'assignment_seeker'}= t('broker_dashboard.assignments_table.seeker')
              %th.sortable{id: 'assignment_provider'}= t('broker_dashboard.assignments_table.provider')
              %th.sortable{id: 'assignment_duration'}= t('broker_dashboard.assignments_table.duration')
              %th.sortable{id: 'assignment_payment'}= t('broker_dashboard.assignments_table.payment')
              %th.sortable{id: 'assignment_feedback'}= t('broker_dashboard.assignments_table.feedback')
          %tbody.list
            - if @assignments.size == 0
              %tr
                %td{ colspan: 5 }= t('seekers.index.no_seekers')

            - @assignments.each do |assignment|
              %tr{ class: "organization organization-#{assignment.provider.organization_id}" }
                %td.status
                  = assignment_label(assignment)
                %td.date{sorttable_customkey: assignment.created_at.strftime("%Y%m%d%H%M%S")}
                  = assignment.created_at.strftime("%d.%m.%Y")
                %td.name
                  = link_to assignment.seeker.name, edit_broker_seeker_path(assignment.seeker)
                %td.provider-name
                  = link_to assignment.provider.name, edit_broker_provider_path(assignment.provider)
                %td.duration
                  - if assignment.duration != nil
                    - minutes = assignment.duration/60000
                    - minutes = minutes.floor
                    - hours = minutes/60
                    - hours = hours.floor
                    - minutes = minutes % 60
                    = "#{hours}:#{minutes}"
                    = " "
                %td.payment{data: {id: (assignment.payment.present?  ? assignment.payment.floor : 0)}}
                  - if assignment.payment != nil
                    = assignment.payment.floor
                %td.feedback
                  = assignment.feedback

:javascript
  var target = window.location.hash;
  var params = window.location.search.substr(1);
  if(params === undefined || params === null || params === '') {
    params = '';
  } else {
    params = '?' + params;
  }

  target = target.replace('#', '');
  if(target === '') {
    target = 'todo';
  }
  // window.location.hash = '';

  $(document).ready(function(){
    $('.search-field').val('')

    $('.nav-pills a[href="#' + target + '"]').tab('show');
    setHelp();

    var selectedOrganizationId = 0;
    var finishedVisible = false;

    if(params.includes('archive=true')) {
      $('.archive-btn').addClass('archive-btn-selected');
    }

    $('.archive-btn').click(function(){
      if(params.includes('archive=true')) {
        var newLocation = window.location.href.split('#')[0].replace('?archive=true', '') + '#' + target;
        window.location.href = newLocation;
      } else {
        if(window.location.href.includes('?')) {
          var newLocation = window.location.href.split('#')[0] + 'archive=true' + '#' + target;
        } else {
          var newLocation = window.location.href.split('#')[0] + '?archive=true' + '#' + target;
        }

        window.location.href = newLocation;
      }
    });

    var tableSorted = [false, false, false, false, false];

    function loadSortedColumn() {
      var hash = target;
      var sortedColumnId = sessionStorage.getItem('sortedColumn' + hash);
      if(sortedColumnId != undefined) {
        sorttable.init();
        sorttable.innerSortFunction.apply(document.getElementById(sortedColumnId), []);
        if(sessionStorage.getItem('sortedReverse' + hash) === 'true') {
          sorttable.innerSortFunction.apply(document.getElementById(sortedColumnId), []);
        }
      } else {
        sorttable.init();
        if(hash === "todo" && !tableSorted[0]) {
          tableSorted[0] = true;
          sorttable.innerSortFunction.apply(document.getElementById('todo_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('todo_date'), []);
        }
        if(hash === "jobs" && !tableSorted[1]) {
          tableSorted[1] = true;
          sorttable.innerSortFunction.apply(document.getElementById('job_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('job_date'), []);
        }
        if(hash === "providers" && !tableSorted[2]) {
          tableSorted[2] = true;
          sorttable.innerSortFunction.apply(document.getElementById('provider_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('provider_date'), []);
        }
        if(hash === "seekers" && !tableSorted[3]) {
          tableSorted[3] = true;
          sorttable.innerSortFunction.apply(document.getElementById('seeker_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('seeker_date'), []);
        }
        if(hash === "assignments" && !tableSorted[4]) {
          tableSorted[4] = true;
          sorttable.innerSortFunction.apply(document.getElementById('assignment_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('assignment_date'), []);
        }
      }
    }

    $('th.sortable').click(function() {
      var hash = target;
      sessionStorage.setItem('sortedColumn' + hash, $(this).attr('id'));
      if($(this).hasClass('sorttable_sorted')) {
        sessionStorage.setItem('sortedReverse' + hash, 'true');
      } else {
        sessionStorage.setItem('sortedReverse' + hash, 'false');
      }
    });

    function checkSearchField() {
      var searchString = window.localStorage.getItem("search_filter");
      if(searchString === null || searchString === 'null') {
        searchString = "#{current_broker.filter.nil? ? '' : current_broker.filter}";
      }

      window.localStorage.setItem("search_filter", null);

      $('.search-field').val(searchString);

      if(searchString !== "") {
        $('.delete-icon').removeClass('display-none');
      }

      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    }

    function loadOrganization() {
      selectedOrganizationId = "#{current_broker.selected_organization_id}";

      if(selectedOrganizationId === '0') {
        $('.display-none.organization').removeClass('display-none');
      } else {
        $('.display-none.organization').removeClass('display-none');
        $('.organization').addClass('display-none');
        $('.organization-' + selectedOrganizationId).removeClass('display-none');
      }

      $('#dropdown-btn').val(selectedOrganizationId);
      // $('#dropdown-btn').text($('.organization-dropdown[data-value="' + id + '"]').text());
    }

    $('.nav-pills a').on('shown.bs.tab', function (e) {
      var history_array = JSON.parse(sessionStorage.getItem('history') || '[]')
      history_array.push(window.location.href.split('#')[0] + e.target.hash );
      sessionStorage.setItem('history', JSON.stringify(history_array))

      sessionStorage.setItem('previous', window.location.href);
      if(history.pushState) {
        history.pushState(null, null, params + e.target.hash);
      }
      else {
        location.hash = e.target.hash;
      }


      target = e.target.hash.replace('#', '');
      loadSortedColumn();
      setHelp();
    });

    $('#dropdown-btn').on('change', function(){
      selectedOrganizationId = this.value;
      $.post("#{save_settings_broker_dashboard_path}", {selected_organization_id: parseInt(selectedOrganizationId)})
        .success(function(response){
          toastr.success(response.message);
        })
        .fail(function(response){
          toastr.error(response.responseJSON.message);
        });


      var name = $(this).find("option:selected").text();
      var vacationStart = $(this).find("option:selected").data('vacation-start');
      var vacationEnd = $(this).find("option:selected").data('vacation-end');
      var showDate = $(this).find("option:selected").data('show-date');

      if(selectedOrganizationId === '0') {
        $('.display-none.organization').removeClass('display-none');
      } else {
        $('.display-none.organization').removeClass('display-none');
        $('.organization').addClass('display-none');
        $('.organization-' + selectedOrganizationId).removeClass('display-none');
      }


      if(vacationStart!=undefined && showDate){
        $('.js-organisation-name').text(name)
        $('.js-org-start-date').text(vacationStart)
        $('.js-org-end-date').text(vacationEnd)
        $('.js-organization').show()
      }else{
        $('.js-organization').hide()
      }

      $.each($('.js-active-tab a'), function(){
           if ($(this).attr('href') != "#todos"){
            value = $("tr.organization", $($(this).attr('href'))).length - $("tr.display-none", $($(this).attr('href'))).length
            $("span",$("[href='"+$(this).attr('href')+"']")).text("("+value+")")
          }else{
            $.each($('.js-todo-tabs a'), function(){
              if($(this).attr('aria-expanded') == 'true'){
                value = $("tr.organization", $($(this).attr('href'))).length - $("tr.display-none", $($(this).attr('href'))).length
                $("span",$("[href='#todos']")).text("("+value+")")
              }
            })
          }
      })
    });

    $('.js-todo-tabs a').on('click', function(){
      _that = $(this);
      $.each($('.js-active-tab a'), function(){
          if ($(this).attr('href') != "#todos"){
            value = $("tr.organization", $($(this).attr('href'))).length - $("tr.display-none", $($(this).attr('href'))).length
            $("span",$("[href='"+$(this).attr('href')+"']")).text("("+value+")")
          }else{
            $.each($('.js-todo-tabs a'), function(){
              // if($(this).attr('aria-expanded') == 'true'){
              if($(this).attr('href') == _that.attr('href')){
                value = $("tr.organization", $($(this).attr('href'))).length - $("tr.display-none", $($(this).attr('href'))).length
                $("span",$("[href='#todos']")).text("("+value+")")
              }
            })
          }

        })
    })

    var options = {
      valueNames: [ 'name', 'provider-name', 'place', 'status',
      'street', 'title', 'date', 'allocations', 'jobs', 'status', 'payment',
      'feedback', 'description', 'salary', 'manpower', 'duration',
      'long_description', 'short_description', 'phone',
      'mobile', 'contact_preference', 'contact_availability', 'company',
      'email', 'sex', 'additional_contacts', 'occupation', 'languages',
      'age', 'rc_username' ]
    };

    var jobsList = new List('jobs', options);
    var providersList = new List('providers', options);
    window.seekersList = new List('seekers', options);
    var assignmentsList = new List('assignments', options);
    var todosCurrentList = new List('todo_current', options);
    var todosPostponedList = new List('todo_postponed', options);

    $('.search-field').on('keyup', function() {
      var searchString = $(this).val();
      if(searchString !== "") {
        $('.delete-icon').removeClass('display-none');
      } else {
        $('.delete-icon').addClass('display-none');
      }
      $('.search-field').val(searchString);

      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    });

    $('.delete-icon').click(function(){
      $('.search-field').val("");
      $('.delete-icon').addClass('display-none');
      var searchString = "";
      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    });

    //checkSearchField();
    loadOrganization();
    loadSortedColumn();

    window.addEventListener("beforeunload", function (event) {
      // $(window).scrollTop(0);
      var searchFieldVal = $('.search-field').val();
      if(searchFieldVal === null) {
        searchFieldVal = '';
      }
      window.localStorage.setItem("search_filter", searchFieldVal);
      $.post("#{save_settings_broker_dashboard_path}", {filter: searchFieldVal, selected_organization_id: parseInt(selectedOrganizationId)}, function(response) {});
    });
  });
