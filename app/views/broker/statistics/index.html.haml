%fieldset
  %legend
    = t('legends.statistic')
.js-download-chart{ width: '3000px !important', height: '3000px !important' }

  %div.row
    %div.col-sm-7.margin-top-10
      %span.dropdown
        %select{id: 'dropdown-btn'}
          %option{value: "0"}
            = "Alle Organisationen"
          - for organization in current_broker.all_organizations
            %option{value: "#{organization.id}"}
              = organization.name
      %span.sum-type.js-sum-type
        %label
          = radio_button_tag :sum_type, 'all', true
          Alle
        %label
          = radio_button_tag :sum_type, 'new', false
          Neue
      %span.sj-checkbox-active
        %label
          = check_box_tag :active, 'active', true, class: 'js-checkbox js-active-checkbox'
          Aktive
        %label
          = check_box_tag :archived, 'archived', true, class: 'js-checkbox js-archived-checkbox'
          Beendete

    %div.col-sm-5
      .dropdown
        = select_tag :intervals, options_for_select(intervals, 'week'), class: 'pull-right sj-dropdown js-interval-dropdown'
      %div.date-wrapper
        %div.sj-date-input.sj-display-inline-block
          #start_date.input-append.date{"data-date" => "12-02-2012", "data-date-format" => "yyyy-mm-dd"}
            = text_field_tag :start_vacation_date, nil, class: 'sj-date-input js-datetime js-datestart', size: "16", "data-date-end-date" => "0d"
        %div.sj-display-inline-block.sj-date-divider
          bis
        %div.sj-date-input.sj-display-inline-block
          #end_date.input-append.date{"data-date" => "12-02-2012", "data-date-format" => "yyyy-mm-dd", "data-date-end-date" =>"0d"}
            = text_field_tag :end_vacation_date, nil, class: 'sj-date-input js-datetime js-dateend', size: "16", "data-date-end-date" => "0d"
  .sj-statistics-title.js-statistics-title{style: 'display: none'}
    = "Statistik Smalljobs #{current_region.name},"
    %span.js-organization
    %span.js-from
    %span.js-to
      bis
  #chart-legends
  %canvas#seeker
  %div.margin-top-40.js-loader-container
    #loader.loader{style: 'display: none;'}
.toPic
.toCanvas
%div.sj-export
  Exportieren:
  %a.js-save-to-jpg{download: "chart.png"}
    PNG,
  %a.js-download-csv
    Excel(CSV)
:javascript
  $(document).ready(function(){

    $('.js-save-to-jpg').click(function(e) {
      window.scrollTo(0,0)
      html2canvas($('.js-download-chart').get(0)).then(function(canvas) {
        url_base64jp = canvas.toDataURL("image/png");
        $(this).attr('href', url_base64jp)
        var hiddenElement = document.createElement('a');
        hiddenElement.classList.add('hidden')
        document.body.appendChild(hiddenElement);
        hiddenElement.href = url_base64jp
        hiddenElement.target = '_blank';
        hiddenElement.download = 'chart.png';
        hiddenElement.click();
      });
    });


    id = $('#dropdown-btn').attr('selected', 'selected').val();
    interval = $(".js-interval-dropdown").attr('selected', 'selected').val();
    date_start = $('.js-datestart').val()
    date_end = $('.js-dateend').val()
    sum_type = $(".js-sum-type input[type='radio']:checked").val()
    active = $('.js-active-checkbox').is(':checked')
    archived = $('.js-archived-checkbox').is(':checked')
    active = true
    archived = true

    $('.js-download-csv').on('click', function(){
      $.ajax({
        url: "#{prepare_data_for_download_broker_statistics_path(format: :json)}",
        type: 'GET',
        data: {
                  organization_id: id,
                  start_date: date_start,
                  end_date: date_end,
                  interval: interval,
                  sum_type: sum_type,
                  active: active,
                  archived: archived
              },
        success: function(result) {
          window.location = result['link']
        },
        error: function(result) {
        }
      });
    })


    $.ajax({
      url: "#{organization_statistics_broker_statistics_path(format: :json)}",
      type: 'GET',
      data: {
                organization_id: id,
                start_date: date_start,
                end_date: date_end,
                interval: interval,
                sum_type: sum_type,
                active: active,
                archived: archived
            },
      beforeSend: function(result){
        $('.js-loader-container').height($("#seeker").height())
        $("#seeker").hide()
        $('#loader').show()
      },
      success: function(result) {
        $('.js-loader-container').height(0)
        $("#loader").hide()
        $('#seeker').show()
        $('.js-from').html(date_start)
        $('.js-to').html(date_end)
        $('.js-organization').html($('#dropdown-btn').find("option:selected").text())
        $('.js-statistics-title').show()
        var ctx = document.getElementById('seeker').getContext('2d');
        window.chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: result["label"],
            datasets: result["statistic"]
          },
          options: {
                legendCallback: function(chart) {
                    var legendHtml = [];
                    legendHtml.push('<table>');
                    legendHtml.push('<tr>');
                    for (var i=0; i<chart.data.datasets.length; i++) {
                        legendHtml.push('<td><div class="chart-legend" style="background-color:' + chart.data.datasets[i].backgroundColor + '"></div></td>');
                        if (chart.data.datasets[i].label) {
                            legendHtml.push('<td class="chart-legend-label-text" onclick="updateDataset(event, ' + '\'' + chart.legend.legendItems[i].datasetIndex + '\'' + ')">' +"<i class=\"fa fa-check\" style=\"background-color:"+chart.data.datasets[i].backgroundColor[0]+"\"></i>"+ chart.data.datasets[i].label + '</td>');
                        }
                    }
                    legendHtml.push('</tr>');
                    legendHtml.push('</table>');
                    return legendHtml.join("");
                },
                legend: {
                    display: false
                },
                tooltips: {
                  callbacks: {
                    title: function(tooltipItem, data) {
                      label = data.datasets[tooltipItem[0].datasetIndex].label || '';
                      data_label = data['datasets'].filter(function(e){return e.label == label})[0].data[tooltipItem[0].index].x
                      return data_label;
                    },
                    label: function(tooltipItems, data) {
                        var tooltipcontent = data.datasets[tooltipItems.datasetIndex].label + ": " + tooltipItems.value;

                        // show difference to the value form the last interval in addition to current value
                        if (tooltipItems.index > 0) {
                            var prev = data.datasets[tooltipItems.datasetIndex].data[tooltipItems.index-1];
                            var dif = tooltipItems.yLabel-prev.y;
                            tooltipcontent += " ("+Math.abs(dif)+" "+((dif>0) ? "neu" : "weniger")+")";
                        }

                        return tooltipcontent;
                    },
                  }
                },
              scales: {
                  xAxes: [{
                      type: 'category',
                      ticks: {
                        autoSkip: true,
                        maxTicksLimit: 20
                      }
                  }]

              },
              hover: {
                mode: 'x'
              },
              type: "line"
          }
        });

        updateDataset = function(e, datasetIndex) {
          var index = datasetIndex;
          var ci = window.chart;
          var meta = ci.getDatasetMeta(index);

          if($(e.target).hasClass('fa')){
            if($(e.target).hasClass('sj-invisible')){
              $(e.target).removeClass('sj-invisible')
              $(e.target).css('color', 'white')
              $(e.target).closest('.chart-legend-label-text').css('text-decoration', 'none')
            }else{
              $(e.target).addClass('sj-invisible')
              $(e.target).css('color', meta.dataset._model.borderColor[0])
              $(e.target).closest('.chart-legend-label-text').css('text-decoration', 'line-through')
            }
          }else{
            if($(e.currentTarget).find('.fa').hasClass('sj-invisible')){
              $(e.currentTarget).find('.fa').removeClass('sj-invisible')
              $(e.currentTarget).find('.fa').css('color', 'white')
              $(e.currentTarget).css('text-decoration', 'none')
            }else{
              $(e.currentTarget).find('.fa').addClass('sj-invisible')
              $(e.currentTarget).find('.fa').css('color', meta.dataset._model.borderColor[0])
              $(e.currentTarget).css('text-decoration', 'line-through')
            }
          }
          // See controller.isDatasetVisible comment
          meta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;

          // We hid a dataset ... rerender the chart
          ci.update();
        };

        var ctx = document.getElementById("seeker").getContext("2d");
        document.getElementById('chart-legends').innerHTML = window.chart.generateLegend();
        $("#start_vacation_date").BSdatepicker("setDate", new Date(result.label.slice(0,1)[0].split('-').reverse()))
        $("#end_vacation_date").BSdatepicker("setDate", new Date(result.label.slice(-1)[0].split('-').reverse()))
      },
      error: function(result) {
      }
    });

    $(".js-datetime").BSdatepicker({
      format: 'yyyy-mm-dd',
    }).on("changeDate", function (e) {
      id = $('#dropdown-btn').attr('selected', 'selected').val();
      getStatistics(id)
    });

    $('#dropdown-btn').on('change', function(){
      var id = this.value;
      getStatistics(id)
    });

    $('.js-interval-dropdown').on('change', function(){
      id = $('#dropdown-btn').attr('selected', 'selected').val();
      getStatistics(id)
    });

    $('.js-sum-type').on('change', function(){
      id = $('#dropdown-btn').attr('selected', 'selected').val();
      getStatistics(id)
    })
    $('.js-checkbox').on('change', function(){
      id = $('#dropdown-btn').attr('selected', 'selected').val();
      getStatistics(id)
    })

    getStatistics = function(id) {
      date_start = $('.js-datestart').val()
      date_end = $('.js-dateend').val()
      interval = $(".js-interval-dropdown").attr('selected', 'selected').val();
      sum_type = $(".js-sum-type input[type='radio']:checked").val()
      active = $('.js-active-checkbox').is(':checked')
      archived = $('.js-archived-checkbox').is(':checked')
      active = true
      archived = true
      $('.js-from').html(date_start)
      if(date_end != undefined && date_end != '') {
        $('.js-to').html('bis '+date_end)
      }
      $('.js-organization').html($('#dropdown-btn').find("option:selected").text())
      $.ajax({
        url: "#{organization_statistics_broker_statistics_path(format: :json)}",
        type: 'GET',
        data: {
                  organization_id: id,
                  start_date: date_start,
                  end_date: date_end,
                  interval: interval,
                  sum_type: sum_type,
                  active: active,
                  archived: archived
              },
        beforeSend: function(result){
          $('.js-loader-container').height($("#seeker").height())
          $("#seeker").hide()
          $('#loader').show()
        },
        success: function(result) {
          $('.js-loader-container').height(0)
          $("#loader").hide()
          $('#loader').hide()
          $("#seeker").show()
          window.chart.data.labels = result["label"]
          // window.chart.data.datasets = result["statistic"]
          for(var i = 0 ; i < result["statistic"].length ; i++){
              var label = result["statistic"][i].label
              window.chart.data.datasets.filter(function(e){return e.label == label})[0].data = result["statistic"][i].data
          }
          window.chart.update()
        },
        error: function(result) {
        }
      });
    }
  })

